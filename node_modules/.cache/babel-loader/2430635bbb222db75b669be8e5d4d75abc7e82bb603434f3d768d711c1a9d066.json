{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';import{Search}from'lucide-react';//import Dashboard from './Dashboard';\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[jobs,setJobs]=useState([]);const[stats,setStats]=useState(null);const[searchTerm,setSearchTerm]=useState('');const[loading,setLoading]=useState(true);useEffect(()=>{const fetchData=async()=>{try{const[jobsResponse,statsResponse]=await Promise.all([fetch('http://localhost:5128/api/dashboard/jobs'),fetch('http://localhost:5128/api/dashboard/stats')]);const jobsData=await jobsResponse.json();const statsData=await statsResponse.json();setJobs(jobsData);setStats(statsData);setLoading(false);}catch(error){console.error('Error fetching data:',error);setLoading(false);}};fetchData();// Refresh every 30 seconds\nconst interval=setInterval(fetchData,30000);return()=>clearInterval(interval);},[]);const filteredJobs=jobs.filter(job=>job.jobNumber.toString().includes(searchTerm));if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center min-h-screen\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:\"Loading dashboard...\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 max-w-7xl mx-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg shadow\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-gray-500 text-sm\",children:\"Total Jobs\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold\",children:(stats===null||stats===void 0?void 0:stats.totalJobs)||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg shadow\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-gray-500 text-sm\",children:\"Scanned Items\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold\",children:(stats===null||stats===void 0?void 0:stats.totalScannedItems)||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg shadow\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-gray-500 text-sm\",children:\"Unique Parts\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold\",children:(stats===null||stats===void 0?void 0:stats.totalUniqueParts)||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg shadow\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-gray-500 text-sm\",children:\"Latest Job\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold\",children:(stats===null||stats===void 0?void 0:stats.latestJob)||'-'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 relative\",children:[/*#__PURE__*/_jsx(Search,{className:\"absolute left-3 top-3 text-gray-400\",size:20}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search by job number...\",className:\"w-full pl-10 pr-4 py-2 border rounded-lg\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg shadow mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold mb-4\",children:\"Recent Jobs Progress\"}),/*#__PURE__*/_jsxs(BarChart,{width:800,height:300,data:filteredJobs.slice(0,10),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"jobNumber\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"totalQuantity\",fill:\"#8884d8\",name:\"Total Quantity\"}),/*#__PURE__*/_jsx(Bar,{dataKey:\"totalScanned\",fill:\"#82ca9d\",name:\"Scanned\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow overflow-hidden\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",children:\"Job Number\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",children:\"Total Parts\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",children:\"Progress\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",children:\"Last Scan\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"divide-y divide-gray-200\",children:filteredJobs.map(job=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4\",children:job.jobNumber}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4\",children:job.totalParts}),/*#__PURE__*/_jsxs(\"td\",{className:\"px-6 py-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2.5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-600 h-2.5 rounded-full\",style:{width:`${job.totalScanned/job.totalQuantity*100}%`}})}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-500\",children:[job.totalScanned,\" / \",job.totalQuantity]})]}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4\",children:new Date(job.lastScanDate).toLocaleString()})]},job.jobNumber))})]})})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Search","jsx","_jsx","jsxs","_jsxs","Dashboard","jobs","setJobs","stats","setStats","searchTerm","setSearchTerm","loading","setLoading","fetchData","jobsResponse","statsResponse","Promise","all","fetch","jobsData","json","statsData","error","console","interval","setInterval","clearInterval","filteredJobs","filter","job","jobNumber","toString","includes","className","children","totalJobs","totalScannedItems","totalUniqueParts","latestJob","size","type","placeholder","value","onChange","e","target","width","height","data","slice","strokeDasharray","dataKey","fill","name","map","totalParts","style","totalScanned","totalQuantity","Date","lastScanDate","toLocaleString"],"sources":["C:/Users/mouad.khalladi/cyrscan-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { Search } from 'lucide-react';\n//import Dashboard from './Dashboard';\n\nconst Dashboard = () => {\n    const [jobs, setJobs] = useState([]);\n    const [stats, setStats] = useState(null);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const [jobsResponse, statsResponse] = await Promise.all([\n                    fetch('http://localhost:5128/api/dashboard/jobs'),\n                    fetch('http://localhost:5128/api/dashboard/stats')\n                ]);\n\n                const jobsData = await jobsResponse.json();\n                const statsData = await statsResponse.json();\n\n                setJobs(jobsData);\n                setStats(statsData);\n                setLoading(false);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n        // Refresh every 30 seconds\n        const interval = setInterval(fetchData, 30000);\n        return () => clearInterval(interval);\n    }, []);\n\n    const filteredJobs = jobs.filter(job =>\n        job.jobNumber.toString().includes(searchTerm)\n    );\n\n    if (loading) {\n        return (\n            <div className=\"flex items-center justify-center min-h-screen\">\n                <div className=\"text-xl\">Loading dashboard...</div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"p-6 max-w-7xl mx-auto\">\n            {/* Stats Overview */}\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n                <div className=\"bg-white p-4 rounded-lg shadow\">\n                    <h3 className=\"text-gray-500 text-sm\">Total Jobs</h3>\n                    <p className=\"text-2xl font-bold\">{stats?.totalJobs || 0}</p>\n                </div>\n                <div className=\"bg-white p-4 rounded-lg shadow\">\n                    <h3 className=\"text-gray-500 text-sm\">Scanned Items</h3>\n                    <p className=\"text-2xl font-bold\">{stats?.totalScannedItems || 0}</p>\n                </div>\n                <div className=\"bg-white p-4 rounded-lg shadow\">\n                    <h3 className=\"text-gray-500 text-sm\">Unique Parts</h3>\n                    <p className=\"text-2xl font-bold\">{stats?.totalUniqueParts || 0}</p>\n                </div>\n                <div className=\"bg-white p-4 rounded-lg shadow\">\n                    <h3 className=\"text-gray-500 text-sm\">Latest Job</h3>\n                    <p className=\"text-2xl font-bold\">{stats?.latestJob || '-'}</p>\n                </div>\n            </div>\n\n            {/* Search Bar */}\n            <div className=\"mb-6 relative\">\n                <Search className=\"absolute left-3 top-3 text-gray-400\" size={20} />\n                <input\n                    type=\"text\"\n                    placeholder=\"Search by job number...\"\n                    className=\"w-full pl-10 pr-4 py-2 border rounded-lg\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n            </div>\n\n            {/* Chart */}\n            <div className=\"bg-white p-4 rounded-lg shadow mb-6\">\n                <h2 className=\"text-lg font-semibold mb-4\">Recent Jobs Progress</h2>\n                <BarChart width={800} height={300} data={filteredJobs.slice(0, 10)}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"jobNumber\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"totalQuantity\" fill=\"#8884d8\" name=\"Total Quantity\" />\n                    <Bar dataKey=\"totalScanned\" fill=\"#82ca9d\" name=\"Scanned\" />\n                </BarChart>\n            </div>\n\n            {/* Jobs Table */}\n            <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n                <table className=\"min-w-full\">\n                    <thead className=\"bg-gray-50\">\n                        <tr>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Job Number</th>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Total Parts</th>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Progress</th>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Last Scan</th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-200\">\n                        {filteredJobs.map((job) => (\n                            <tr key={job.jobNumber}>\n                                <td className=\"px-6 py-4\">{job.jobNumber}</td>\n                                <td className=\"px-6 py-4\">{job.totalParts}</td>\n                                <td className=\"px-6 py-4\">\n                                    <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                                        <div\n                                            className=\"bg-blue-600 h-2.5 rounded-full\"\n                                            style={{ width: `${(job.totalScanned / job.totalQuantity * 100)}%` }}\n                                        ></div>\n                                    </div>\n                                    <span className=\"text-sm text-gray-500\">\n                                        {job.totalScanned} / {job.totalQuantity}\n                                    </span>\n                                </td>\n                                <td className=\"px-6 py-4\">\n                                    {new Date(job.lastScanDate).toLocaleString()}\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}