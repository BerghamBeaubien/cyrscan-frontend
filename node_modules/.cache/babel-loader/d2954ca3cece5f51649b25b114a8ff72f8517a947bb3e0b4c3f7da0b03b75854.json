{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mouad.khalladi\\\\cyrscan-frontend\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { Search } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const [jobsResponse, statsResponse] = await Promise.all([fetch('http://localhost:5128/api/dashboard/jobs'), fetch('http://localhost:5128/api/dashboard/stats')]);\n\n        // Log responses for debugging\n        console.log('Jobs Response:', jobsResponse);\n        console.log('Stats Response:', statsResponse);\n        if (!jobsResponse.ok || !statsResponse.ok) {\n          throw new Error(`HTTP error! Jobs: ${jobsResponse.status}, Stats: ${statsResponse.status}`);\n        }\n        const jobsData = await jobsResponse.json();\n        const statsData = await statsResponse.json();\n\n        // Log parsed data\n        console.log('Jobs Data:', jobsData);\n        console.log('Stats Data:', statsData);\n        setJobs(jobsData);\n        setStats(statsData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Rest of your component remains the same until the return statement\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl\",\n        children: \"Loading dashboard...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl text-red-600\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Rest of your JSX remains the same\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-7xl mx-auto\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"h+Vcj1NcoDc/rWSWzp7Ycb+EkC8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Search","jsxDEV","_jsxDEV","Dashboard","_s","jobs","setJobs","stats","setStats","searchTerm","setSearchTerm","loading","setLoading","error","setError","fetchData","jobsResponse","statsResponse","Promise","all","fetch","console","log","ok","Error","status","jobsData","json","statsData","message","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mouad.khalladi/cyrscan-frontend/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { Search } from 'lucide-react';\n\nconst Dashboard = () => {\n    const [jobs, setJobs] = useState([]);\n    const [stats, setStats] = useState(null);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                setLoading(true);\n                setError(null);\n\n                const [jobsResponse, statsResponse] = await Promise.all([\n                    fetch('http://localhost:5128/api/dashboard/jobs'),\n                    fetch('http://localhost:5128/api/dashboard/stats')\n                ]);\n\n                // Log responses for debugging\n                console.log('Jobs Response:', jobsResponse);\n                console.log('Stats Response:', statsResponse);\n\n                if (!jobsResponse.ok || !statsResponse.ok) {\n                    throw new Error(`HTTP error! Jobs: ${jobsResponse.status}, Stats: ${statsResponse.status}`);\n                }\n\n                const jobsData = await jobsResponse.json();\n                const statsData = await statsResponse.json();\n\n                // Log parsed data\n                console.log('Jobs Data:', jobsData);\n                console.log('Stats Data:', statsData);\n\n                setJobs(jobsData);\n                setStats(statsData);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n        const interval = setInterval(fetchData, 30000);\n        return () => clearInterval(interval);\n    }, []);\n\n    // Rest of your component remains the same until the return statement\n\n    if (loading) {\n        return (\n            <div className=\"flex items-center justify-center min-h-screen\">\n                <div className=\"text-xl\">Loading dashboard...</div>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"flex items-center justify-center min-h-screen\">\n                <div className=\"text-xl text-red-600\">Error: {error}</div>\n            </div>\n        );\n    }\n\n    // Rest of your JSX remains the same\n    return (\n        <div className=\"p-6 max-w-7xl mx-auto\">\n            {/* Original JSX content */}\n            {/* ... */}\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}